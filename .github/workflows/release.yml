name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build binaries
      run: |
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -o rift-linux-amd64 .
        GOOS=linux GOARCH=arm64 go build -o rift-linux-arm64 .
        GOOS=darwin GOARCH=amd64 go build -o rift-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -o rift-darwin-arm64 .
        GOOS=windows GOARCH=amd64 go build -o rift-windows-amd64.exe .
        
        # Create archives
        tar -czf rift-linux-amd64.tar.gz rift-linux-amd64
        tar -czf rift-linux-arm64.tar.gz rift-linux-arm64
        tar -czf rift-darwin-amd64.tar.gz rift-darwin-amd64
        tar -czf rift-darwin-arm64.tar.gz rift-darwin-arm64
        zip rift-windows-amd64.zip rift-windows-amd64.exe
        
        # Calculate SHA256 hashes
        echo "## SHA256 Checksums" >> checksums.txt
        sha256sum rift-*.tar.gz rift-*.zip >> checksums.txt
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          rift-linux-amd64.tar.gz
          rift-linux-arm64.tar.gz
          rift-darwin-amd64.tar.gz
          rift-darwin-arm64.tar.gz
          rift-windows-amd64.zip
          checksums.txt
        generate_release_notes: true
        
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Publish to npm
      run: |
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}